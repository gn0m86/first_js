'number' + 23 + 32 // відповідь буде "number2332" - до строки, яка в кавичках, додаються числа, строка і число сприймаються як строка,
//  тому відповіддю буде строка з числами без пробілів та без складання. 


41 + 1 + 'number' // відповідь буде "42number", тому що спочатку йдуть числа, які складаються і виконується аріфметичне
//  складання, а потім йде строка, яка просто додається до складених чисел і відображаться буде як строка


null + 1 // відповідь буде "1", тому що null - це пустота, тому якщо до пустоти додати цифру "1", буде цифра "1"



'five' + + 'two'  // відповідь буде "fiveNaN", тому що спочатку йде строка до якої додаємо число в якому використовується унарний плюс, яке написано як строка, тому воно 
// визначаеться як "NaN", що значить як "Not a Number" (не цифра), тому строка 'five' додається до NaN, результатом стає строка 'fiveNaN'



2 && 7  // відповідь буде "7", тому що JS перевіряє істинність (true або false) обох операндів, якщо обидва істинні, то повертається останній істинний операнд "7"



+'40' + +'2';  // відповідь буде число "42", тому що обидва операнди записані з унарним плюсом, який перетворює наші значення на числа, тому 40+2=42



'10' - 5 === 6;  // відповідь буде "false", тому що спочатку виконується операція віднімання, яка перетворює рядок '10' в число 10, а потім віднімає 5, 
// результат буде (10 - 5 = 5). Далі йде операція суворого порівняння, де зліва у нас пораховане число "5" порівнюється з правим числом "6", результат якого буде "false"



true + false  // відповідь буде "1", тому що виконується автоматичне перетворення типів з булевих на числа і потім виконується арифметична операція (1+0=1)



'4px' - 3  // відповідь буде "NaN", тому що операція віднімання не може бути виконана між строчним операндом, який містить нечислові символи (px), і числом 3, 
// тому JS повертає "NaN"



'4' - 3  // відповідь буде число "1", тому що строка '4' автоматично перетворюється на число і потім виконується арифметична операція віднімання (4-3=1)



'2' + 3 ** 2;  // відповідь буде строка "29", тому що спочатку виконується операція возведення в ступінь (3 ** 2 = 9), а далі виконується конкатенація строки '2' з числом 9
// тому що, якщо один із операндів є строкою, то всі операнди перетворюються на строку, тому у відповіді буде строка "29".



12 / '6'  // відповідь буде число "2", тому що строка '6' автоматично перетворюється на число і потім виконується арифметична операція ділення (12/6=2)



23 + 42 + 'number'  // відповідь буде строка "65number", тому що спочатку виконується арифметичне складання цифр (23+42=65), а потім число 65 конкатенується з строкою "number"
// в результаті отримуємо строку "65number"



'10' + (5 === 6);  // відповідь буде строка "10false", тому що спочатку виконується вираз в дужках, який повертає булеве значення "false", потім виконується конкатинація
// до строки '10' додається строка "false" і відповідь буде строка "10false"



let ab = 'number' + 15 + 3  // відповідь буде строка "number153", тому що всі операнди будуть строками, тому все склеюється і получаємо строку "number153"
console.log(ab)

